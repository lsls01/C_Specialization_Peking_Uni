class Complex{};

int main()
{
    Complex c1(7, 8);
    Complex c2 = 12;            // = is initialize, not assign, it will regard 12 as an argument to the function.
    c1 = 9;                     // convert 9 to a temporary object.
}



static class
eg:
int CRectangle::nTotalNumber = 0;
int CRectangle::nTotalArea = 0;



复制构造函数
CRectangle:: CRectangle(CRectangle &r)
{
    w = r.w;
    h = r.h;
    nTotalNumber++;
    nTotalArea += w * h;
}



定义封闭类函数的初始化列表
类名：：构造函数（参数表）：成员变量1（参数表），成员变量2（参数表）


成员对象的构造函数调用顺序：
和成员对象在类中的说明顺序一致
与在成员初始化列表中出现的顺序无关



常量成员函数
class Sample
{
    public:
        int value;
        void GetValue() const;
        void func(){};
}
void Sample:: GetValue() const
{
    value = 0;          // wrong
    func();             // wrong
}
常量成员函数不能调用或修改非常量（静态除外）
